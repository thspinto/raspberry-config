version: "3.7"
services:
  traefik:
    image: "{{ traefik_docker_image }}"
    networks:
      - traefik
    ports:
      - 80:80
      - 443:443
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--global.sendAnonymousUsage=false"
      - "--certificatesResolvers.ssl.acme.email={{ email }}"
      - "--certificatesResolvers.ssl.acme.storage=/acme/acme.json"
      - "--certificatesResolvers.ssl.acme.dnsChallenge=true"
      - "--certificatesResolvers.ssl.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesResolvers.ssl.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesResolvers.ssl.acme.dnsChallenge.delayBeforeCheck=60"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
    environment:
      CF_DNS_API_TOKEN: "{{ cloudflare_api_key }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.http-catchall.entrypoints: web
      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.routers.api.middlewares: auth
      traefik.http.routers.api.rule: Host(`traefik.{{ domain }}`)
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.entryPoints: websecure
      traefik.http.routers.api.tls.certresolver: ssl
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ traefik_data_directory }}/acme:/acme:rw"
    restart: unless-stopped

  forward_auth:
    image: "{{ forward_auth_docker_image }}"
    networks:
      - traefik
    command:
      - "--default-provider=oidc"
      - "--providers.oidc.issuer-url={{ forward_auth_issuer_url }}"
      - "--providers.oidc.client-id={{ forward_auth_client_id }}"
      - "--providers.oidc.client-secret={{ forward_auth_client_secret }}"
      - "--cookie-domain={{ domain }}"
      - "--secret={{ forward_auth_secret }}"
      - "--auth-host=auth.{{ domain }}"
      - "--whitelist={{ email }}"
      - "--log-level=debug"
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.auth.forwardauth.address: http://forward_auth:4181
      traefik.http.middlewares.auth.forwardauth.authResponseHeaders: X-Forwarded-User
      traefik.http.routers.auth.middlewares: auth
      traefik.http.routers.auth.rule: Host(`auth.{{ domain }}`)
      traefik.http.routers.auth.entryPoints: websecure
      traefik.http.routers.auth.tls: "true"
      traefik.http.routers.auth.tls.certresolver: ssl
      traefik.http.services.auth.loadBalancer.server.port: 4181
    restart: unless-stopped

  cloudflare-ddns:
    image: oznu/cloudflare-ddns:armhf
    environment:
      ZONE: "rbp.{{ domain }}"
      API_KEY: "{{ cloudflare_api_key }}"
      PROXY: "false"
    restart: unless-stopped

networks:
  traefik:
